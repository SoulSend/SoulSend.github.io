<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/05/26/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <url>/2024/05/26/%E5%BC%80%E5%8F%91%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="开发遇到的问题记录"><a href="#开发遇到的问题记录" class="headerlink" title="开发遇到的问题记录"></a>开发遇到的问题记录</h1><h5 id="更新时间：2024年5月26日"><a href="#更新时间：2024年5月26日" class="headerlink" title="更新时间：2024年5月26日"></a>更新时间：2024年5月26日</h5><hr><h4 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">记录开发时遇到的一些小问题，同时记录解决方案以防忘记，方便随时查阅<br></code></pre></td></tr></table></figure><h4 id="正文："><a href="#正文：" class="headerlink" title="正文："></a>正文：</h4><h5 id="1、配置环境变量以后java-version指令无效"><a href="#1、配置环境变量以后java-version指令无效" class="headerlink" title="1、配置环境变量以后java -version指令无效"></a>1、配置环境变量以后java -version指令无效</h5><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">解决方案：安装了多个JDK配置环境变量时，在<span class="hljs-type">path</span>路径中注意将自己配置的JAVA_HOME变量放在系统配置的变量之前，否则可能出现java -<span class="hljs-keyword">version</span>无效，同时<span class="hljs-keyword">where</span> java 指令查询时只有c盘的默认路径<br></code></pre></td></tr></table></figure><h5 id="2、编辑path路径的值的时候只出现一行杂乱的所有路径值，不利于修改"><a href="#2、编辑path路径的值的时候只出现一行杂乱的所有路径值，不利于修改" class="headerlink" title="2、编辑path路径的值的时候只出现一行杂乱的所有路径值，不利于修改"></a>2、编辑path路径的值的时候只出现一行杂乱的所有路径值，不利于修改</h5><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dos">可能是<span class="hljs-built_in">path</span>路径中的第一行不是 C : Windows\System32,在<span class="hljs-built_in">path</span>的最前面添加这个变量确定然后重新打开就可以了<br></code></pre></td></tr></table></figure><h5 id="3、Tomcat安装配置双击启动时控制台一闪而过"><a href="#3、Tomcat安装配置双击启动时控制台一闪而过" class="headerlink" title="3、Tomcat安装配置双击启动时控制台一闪而过"></a>3、Tomcat安装配置双击启动时控制台一闪而过</h5><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs mipsasm">检查一下<span class="hljs-keyword">JDK的环境变量是否正确，比如说像 </span><span class="hljs-number">1</span> 那样的问题就会导致这样的问题<br></code></pre></td></tr></table></figure><h5 id="4、虚拟机开机报错-“另一个程序已锁定文件的一部分，进程无法访问”"><a href="#4、虚拟机开机报错-“另一个程序已锁定文件的一部分，进程无法访问”" class="headerlink" title="4、虚拟机开机报错 “另一个程序已锁定文件的一部分，进程无法访问”"></a>4、虚拟机开机报错 “另一个程序已锁定文件的一部分，进程无法访问”</h5><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli">原因：这是由于虚拟机在运行的时候，会锁定文件防止被修改，而如果系统突然崩溃,eg:突然断电，导致关机或者蓝屏等，虚拟机就来不急把已锁定的文件解锁。当再次启动虚拟机的时候，就会提示这类错误信息。<br>解决办法：找到报错路径中的文件，将其中 <span class="hljs-string">.lck</span>文件删除掉，再开启虚拟机就可以成功了<br></code></pre></td></tr></table></figure><h5 id="5、关于虚拟机没网，导致换源，下载软件，访问浏览器出错解决方法"><a href="#5、关于虚拟机没网，导致换源，下载软件，访问浏览器出错解决方法" class="headerlink" title="5、关于虚拟机没网，导致换源，下载软件，访问浏览器出错解决方法"></a>5、关于虚拟机没网，导致换源，下载软件，访问浏览器出错解决方法</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">在桥连接模式下，不要使用校园网，换成自己的热点，再尝试。我使用这方法解决的问题<br></code></pre></td></tr></table></figure><h5 id="6、关于2023版idea中的创建包后自动收缩空包问题解决"><a href="#6、关于2023版idea中的创建包后自动收缩空包问题解决" class="headerlink" title="6、关于2023版idea中的创建包后自动收缩空包问题解决"></a>6、关于2023版idea中的创建包后自动收缩空包问题解决</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">在项目名字旁边有三个竖着的点，点开选择树外观，然后将压缩空的中间包选项叉掉就行了<br></code></pre></td></tr></table></figure><h5 id="7、在idea中mybatis使用注解来编写sql语句时会对sql方言进行配置"><a href="#7、在idea中mybatis使用注解来编写sql语句时会对sql方言进行配置" class="headerlink" title="7、在idea中mybatis使用注解来编写sql语句时会对sql方言进行配置"></a>7、在idea中mybatis使用注解来编写sql语句时会对sql方言进行配置</h5><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql">方法：选中<span class="hljs-keyword">sql</span>语句，选择显示上下文操作，选择注入语言或引用，选择mysql<br>注意：设置完<span class="hljs-keyword">sql</span>提示后idea可能会对<span class="hljs-keyword">sql</span>语句提示报错，原因是找不到表，这时在连接数据库时要添加你要连接哪个数据库，确切的写上数据库的名字就可以了<br></code></pre></td></tr></table></figure><h5 id="8、使用hexo搭建博客框架的时候在更换主题的时候出现访问端口后浏览器给出的是空白页面"><a href="#8、使用hexo搭建博客框架的时候在更换主题的时候出现访问端口后浏览器给出的是空白页面" class="headerlink" title="8、使用hexo搭建博客框架的时候在更换主题的时候出现访问端口后浏览器给出的是空白页面"></a>8、使用hexo搭建博客框架的时候在更换主题的时候出现访问端口后浏览器给出的是空白页面</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">换一个主题就行了<br></code></pre></td></tr></table></figure><h5 id="9、在最后部署hexo到GitHub的时候出现无法连接远程仓库的问题"><a href="#9、在最后部署hexo到GitHub的时候出现无法连接远程仓库的问题" class="headerlink" title="9、在最后部署hexo到GitHub的时候出现无法连接远程仓库的问题"></a>9、在最后部署hexo到GitHub的时候出现无法连接远程仓库的问题</h5><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">我先将防火墙关闭，但是没用，然后我将连接的模式从<span class="hljs-keyword">https</span>切换成了ssh连接，刚开始不行，切换了一下代理，然后尝试了两次部署，结果突然就可以了<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>蓝桥杯Java组备赛</title>
    <link href="/2024/05/26/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%B5%9BJava/"/>
    <url>/2024/05/26/%E8%93%9D%E6%A1%A5%E6%9D%AF%E5%A4%87%E8%B5%9BJava/</url>
    
    <content type="html"><![CDATA[<h1 id="蓝桥杯备赛Java"><a href="#蓝桥杯备赛Java" class="headerlink" title="蓝桥杯备赛Java"></a>蓝桥杯备赛Java</h1><hr><h5 id="更新时间：2024年5月26日"><a href="#更新时间：2024年5月26日" class="headerlink" title="更新时间：2024年5月26日"></a>更新时间：2024年5月26日</h5><h2 id="前言："><a href="#前言：" class="headerlink" title="前言："></a>前言：</h2><h4 id="1、提交的代码不要带pakage，不然会编译出错"><a href="#1、提交的代码不要带pakage，不然会编译出错" class="headerlink" title="1、提交的代码不要带pakage，不然会编译出错"></a>1、提交的代码不要带pakage，不然会编译出错</h4><h4 id="2、提交的类名必须是Main，不然会编译报错"><a href="#2、提交的类名必须是Main，不然会编译报错" class="headerlink" title="2、提交的类名必须是Main，不然会编译报错"></a>2、提交的类名必须是Main，不然会编译报错</h4><h4 id="3、导包：import-java-util"><a href="#3、导包：import-java-util" class="headerlink" title="3、导包：import java.util.*;"></a>3、导包：import java.util.*;</h4><h2 id="eclipse使用技巧-快捷键"><a href="#eclipse使用技巧-快捷键" class="headerlink" title="eclipse使用技巧&#x2F;快捷键"></a>eclipse使用技巧&#x2F;快捷键</h2><h4 id="1、alt-自动联想"><a href="#1、alt-自动联想" class="headerlink" title="1、alt+&#x2F; 自动联想"></a>1、alt+&#x2F; 自动联想</h4><h3 id="编程技巧："><a href="#编程技巧：" class="headerlink" title="编程技巧："></a>编程技巧：</h3><h4 id="1、对于字母大小写转换，只需要将字符对32进行异或操作就可以了"><a href="#1、对于字母大小写转换，只需要将字符对32进行异或操作就可以了" class="headerlink" title="1、对于字母大小写转换，只需要将字符对32进行异或操作就可以了"></a>1、对于字母大小写转换，只需要将字符对32进行异或操作就可以了</h4><h4 id="2、对于确定一个除法算式的结果是整数还是小数可以使用原数减去原数取整然后和0比较的方法，非常简单且快捷"><a href="#2、对于确定一个除法算式的结果是整数还是小数可以使用原数减去原数取整然后和0比较的方法，非常简单且快捷" class="headerlink" title="2、对于确定一个除法算式的结果是整数还是小数可以使用原数减去原数取整然后和0比较的方法，非常简单且快捷"></a>2、对于确定一个除法算式的结果是整数还是小数可以使用原数减去原数取整然后和0比较的方法，非常简单且快捷</h4><figure class="highlight ocaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ocaml">代码示例：<br><span class="hljs-built_in">float</span> a=<span class="hljs-number">123.456</span>,<span class="hljs-keyword">val</span>=<span class="hljs-number">0.0</span>;<br><span class="hljs-built_in">int</span> b=<span class="hljs-number">0</span>;<br>b=(<span class="hljs-built_in">int</span>)a;<br><span class="hljs-keyword">val</span> =a-b;<br></code></pre></td></tr></table></figure><h3 id="Debug注意事项："><a href="#Debug注意事项：" class="headerlink" title="Debug注意事项："></a>Debug注意事项：</h3><h4 id="1、当两个部分的代码是复制粘贴写的，比如代码2逻辑与代码1逻辑差不多时，我直接copy代码1到代码2位置，改一改。但是一定要注意！如果你的代码1有逻辑上的bug，那么你的代码2也极有可能会存在bug，在寻找时一定要注意不能只改代码1，还要检查代码2！遭了好多次了，该长点记性了，哭-，这次把它记下来，方便复习"><a href="#1、当两个部分的代码是复制粘贴写的，比如代码2逻辑与代码1逻辑差不多时，我直接copy代码1到代码2位置，改一改。但是一定要注意！如果你的代码1有逻辑上的bug，那么你的代码2也极有可能会存在bug，在寻找时一定要注意不能只改代码1，还要检查代码2！遭了好多次了，该长点记性了，哭-，这次把它记下来，方便复习" class="headerlink" title="1、当两个部分的代码是复制粘贴写的，比如代码2逻辑与代码1逻辑差不多时，我直接copy代码1到代码2位置，改一改。但是一定要注意！如果你的代码1有逻辑上的bug，那么你的代码2也极有可能会存在bug，在寻找时一定要注意不能只改代码1，还要检查代码2！遭了好多次了，该长点记性了，哭~，这次把它记下来，方便复习"></a>1、当两个部分的代码是复制粘贴写的，比如代码2逻辑与代码1逻辑差不多时，我直接copy代码1到代码2位置，改一改。但是一定要注意！如果你的代码1有逻辑上的bug，那么你的代码2也极有可能会存在bug，在寻找时一定要注意不能只改代码1，还要检查代码2！遭了好多次了，该长点记性了，哭~，这次把它记下来，方便复习</h4><h3 id="比赛习惯："><a href="#比赛习惯：" class="headerlink" title="比赛习惯："></a>比赛习惯：</h3><h4 id="1、比赛时间较长，比赛的时候可以带点吃的和水"><a href="#1、比赛时间较长，比赛的时候可以带点吃的和水" class="headerlink" title="1、比赛时间较长，比赛的时候可以带点吃的和水"></a>1、比赛时间较长，比赛的时候可以带点吃的和水</h4><h4 id="2、答题完毕后，检查一下代码格式以后再离开，免得事后担心自己的格式错误导致0分（Main写成Mian啊带包名之类的）"><a href="#2、答题完毕后，检查一下代码格式以后再离开，免得事后担心自己的格式错误导致0分（Main写成Mian啊带包名之类的）" class="headerlink" title="2、答题完毕后，检查一下代码格式以后再离开，免得事后担心自己的格式错误导致0分（Main写成Mian啊带包名之类的）"></a>2、答题完毕后，检查一下代码格式以后再离开，免得事后担心自己的格式错误导致0分（Main写成Mian啊带包名之类的）</h4><h3 id="一、枚举"><a href="#一、枚举" class="headerlink" title="一、枚举"></a>一、枚举</h3><h3 id="二、前缀和-差分"><a href="#二、前缀和-差分" class="headerlink" title="二、前缀和&#x2F;差分"></a>二、前缀和&#x2F;差分</h3><h3 id="三、尺取法-差分"><a href="#三、尺取法-差分" class="headerlink" title="三、尺取法&#x2F;差分"></a>三、尺取法&#x2F;差分</h3><h3 id="四、贪心"><a href="#四、贪心" class="headerlink" title="四、贪心"></a>四、贪心</h3><h3 id="五、二分"><a href="#五、二分" class="headerlink" title="五、二分"></a>五、二分</h3><h3 id="六、递归-分治"><a href="#六、递归-分治" class="headerlink" title="六、递归&#x2F;分治"></a>六、递归&#x2F;分治</h3><h3 id="七、DFS深度优先搜索"><a href="#七、DFS深度优先搜索" class="headerlink" title="七、DFS深度优先搜索"></a>七、DFS深度优先搜索</h3><h4 id="1、搜索所有路径"><a href="#1、搜索所有路径" class="headerlink" title="1、搜索所有路径"></a>1、搜索所有路径</h4><h4 id="2、一般通过栈显示或者隐式的实现。其实也就是回溯，当递归到条件满足的时候，将当前这个路径保存，然后返回，返回到上一层递归调用后面，然后就执行回溯，将刚才标记的节点恢复为未访问，同时如果这个节点添加到集合里了的话还要将其移除"><a href="#2、一般通过栈显示或者隐式的实现。其实也就是回溯，当递归到条件满足的时候，将当前这个路径保存，然后返回，返回到上一层递归调用后面，然后就执行回溯，将刚才标记的节点恢复为未访问，同时如果这个节点添加到集合里了的话还要将其移除" class="headerlink" title="2、一般通过栈显示或者隐式的实现。其实也就是回溯，当递归到条件满足的时候，将当前这个路径保存，然后返回，返回到上一层递归调用后面，然后就执行回溯，将刚才标记的节点恢复为未访问，同时如果这个节点添加到集合里了的话还要将其移除"></a>2、一般通过栈显示或者隐式的实现。其实也就是回溯，当递归到条件满足的时候，将当前这个路径保存，然后返回，返回到上一层递归调用后面，然后就执行回溯，将刚才标记的节点恢复为未访问，同时如果这个节点添加到集合里了的话还要将其移除</h4><h4 id="3、案例：枚举排列"><a href="#3、案例：枚举排列" class="headerlink" title="3、案例：枚举排列"></a>3、案例：<a href="https://www.luogu.com.cn/problem/B3623">枚举排列</a></h4><h4 id="AC代码："><a href="#AC代码：" class="headerlink" title="AC代码："></a>AC代码：</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> Main &#123;<br>static ArrayList&lt;ArrayList&lt;<span class="hljs-type">Integer</span>&gt;&gt; list=<span class="hljs-built_in">new</span> ArrayList();<br><br><span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) &#123;<br>Scanner sc=<span class="hljs-built_in">new</span> Scanner(<span class="hljs-keyword">System</span>.<span class="hljs-keyword">in</span>);<br><span class="hljs-type">int</span> n=sc.nextInt();<br><span class="hljs-type">int</span> k=sc.nextInt();<br><span class="hljs-type">int</span> []f=<span class="hljs-built_in">new</span> <span class="hljs-type">int</span> [n+<span class="hljs-number">1</span>];<br>ArrayList&lt;<span class="hljs-type">Integer</span>&gt; num=<span class="hljs-built_in">new</span> ArrayList();<br>dfs(n,k,f,num);<br><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;list.size();i++) &#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;k;j++) &#123;<br><span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.print(list.<span class="hljs-keyword">get</span>(i).<span class="hljs-keyword">get</span>(j)+&quot; &quot;);<br>&#125;<br><span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println();<br>&#125;<br><br>&#125;<br>private static <span class="hljs-type">void</span> dfs(<span class="hljs-type">int</span> n,<span class="hljs-type">int</span> k,<span class="hljs-type">int</span>[]f,ArrayList&lt;<span class="hljs-type">Integer</span>&gt; num) &#123;<br><span class="hljs-keyword">if</span>(num.size()==k) &#123;<br>list.<span class="hljs-keyword">add</span>(<span class="hljs-built_in">new</span> ArrayList(num));<br><span class="hljs-keyword">return</span> ;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) &#123;<br><span class="hljs-keyword">if</span>(f[i]==<span class="hljs-number">1</span>)<span class="hljs-keyword">continue</span>;<br>f[i]=<span class="hljs-number">1</span>;<br>num.<span class="hljs-keyword">add</span>(i);<br>dfs(n,k,f,num);<br>f[i]=<span class="hljs-number">0</span>;<br>num.remove(num.size()<span class="hljs-number">-1</span>);<br>&#125;<br><br>&#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="八、BFS广度优先搜索"><a href="#八、BFS广度优先搜索" class="headerlink" title="八、BFS广度优先搜索"></a>八、BFS广度优先搜索</h3><h4 id="1、一般用来寻找最短路径。还有其他用途，但我还不会"><a href="#1、一般用来寻找最短路径。还有其他用途，但我还不会" class="headerlink" title="1、一般用来寻找最短路径。还有其他用途，但我还不会"></a>1、一般用来寻找最短路径。还有其他用途，但我还不会</h4><h4 id="2、使用队列来实现-“分裂”，当前节点有其他可以访问的节点，我们就将其他节点都给入队。这样就将一个节点分成若干个可访问的节点，那么一直分到最后，就一定是最短的那个路径先满足条件"><a href="#2、使用队列来实现-“分裂”，当前节点有其他可以访问的节点，我们就将其他节点都给入队。这样就将一个节点分成若干个可访问的节点，那么一直分到最后，就一定是最短的那个路径先满足条件" class="headerlink" title="2、使用队列来实现 “分裂”，当前节点有其他可以访问的节点，我们就将其他节点都给入队。这样就将一个节点分成若干个可访问的节点，那么一直分到最后，就一定是最短的那个路径先满足条件"></a>2、使用队列来实现 “分裂”，当前节点有其他可以访问的节点，我们就将其他节点都给入队。这样就将一个节点分成若干个可访问的节点，那么一直分到最后，就一定是最短的那个路径先满足条件</h4><h4 id="3、案例：离开中山路"><a href="#3、案例：离开中山路" class="headerlink" title="3、案例：离开中山路"></a>3、案例：<a href="https://www.luogu.com.cn/problem/P1746">离开中山路</a></h4><h4 id="AC代码：-1"><a href="#AC代码：-1" class="headerlink" title="AC代码："></a>AC代码：</h4><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><br><span class="hljs-keyword">import</span> java.util.*;<br><span class="hljs-built_in">public</span> <span class="hljs-keyword">class</span> Main &#123;<br><span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> main(String[] args) &#123;<br>Scanner sc=<span class="hljs-built_in">new</span> Scanner(<span class="hljs-keyword">System</span>.<span class="hljs-keyword">in</span>);<br><span class="hljs-type">int</span> n=sc.nextInt();<br><span class="hljs-type">int</span> [][]map=<span class="hljs-built_in">new</span> <span class="hljs-type">int</span> [n+<span class="hljs-number">1</span>][n+<span class="hljs-number">1</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++) &#123;<br>String s=sc.next();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">1</span>;j&lt;=n;j++) &#123;<br>map[i][j]=s.charAt(j<span class="hljs-number">-1</span>)-<span class="hljs-string">&#x27;0&#x27;</span>;<br>&#125;<br>&#125;<br><span class="hljs-type">int</span> []x=<span class="hljs-built_in">new</span> <span class="hljs-type">int</span> [<span class="hljs-number">3</span>];<br><span class="hljs-type">int</span> []y=<span class="hljs-built_in">new</span> <span class="hljs-type">int</span> [<span class="hljs-number">3</span>];<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">2</span>;i++) &#123;<br>x[i]=sc.nextInt();<br>y[i]=sc.nextInt();<br>&#125;<br>bfs(n,x,y,map);<br><br>&#125;<br><span class="hljs-built_in">public</span> static <span class="hljs-type">void</span> bfs(<span class="hljs-type">int</span> n,<span class="hljs-type">int</span> []x,<span class="hljs-type">int</span> []y,<span class="hljs-type">int</span>[][]map) &#123;<br>LinkedList&lt;Node&gt; queue=<span class="hljs-built_in">new</span> LinkedList();<br><span class="hljs-type">int</span> []dx=<span class="hljs-built_in">new</span> <span class="hljs-type">int</span>[] &#123;<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>&#125;;//x方向数组<br><span class="hljs-type">int</span> []dy=<span class="hljs-built_in">new</span> <span class="hljs-type">int</span>[] &#123;<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">-1</span>&#125;;//y方向数组<br>//初始化入队<br>Node node=<span class="hljs-built_in">new</span> Node(x[<span class="hljs-number">1</span>],y[<span class="hljs-number">1</span>],<span class="hljs-number">0</span>);//起点默认可通过<br>queue.<span class="hljs-keyword">add</span>(node);<br>map[x[<span class="hljs-number">1</span>]][y[<span class="hljs-number">1</span>]]=<span class="hljs-number">1</span>;<br><span class="hljs-keyword">while</span>(!queue.isEmpty()) &#123;<br>Node <span class="hljs-keyword">no</span>=queue.poll();<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">4</span>;i++) &#123;<br><span class="hljs-type">int</span> _x=<span class="hljs-keyword">no</span>.x+dx[i];<br><span class="hljs-type">int</span> _y=<span class="hljs-keyword">no</span>.y+dy[i];<br><span class="hljs-keyword">if</span>(_x&lt;=<span class="hljs-number">0</span>||_y&lt;=<span class="hljs-number">0</span>||_x&gt;n||_y&gt;n||map[_x][_y]==<span class="hljs-number">1</span>)<span class="hljs-keyword">continue</span>;<br><span class="hljs-keyword">if</span>(map[_x][_y]==<span class="hljs-number">0</span>) &#123;<br>map[_x][_y]=<span class="hljs-number">1</span>;<br>queue.<span class="hljs-keyword">add</span>(<span class="hljs-built_in">new</span> Node(_x,_y,<span class="hljs-keyword">no</span>.step+<span class="hljs-number">1</span>));<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">no</span>.x==x[<span class="hljs-number">2</span>]&amp;&amp;<span class="hljs-keyword">no</span>.y==y[<span class="hljs-number">2</span>])<span class="hljs-keyword">System</span>.<span class="hljs-keyword">out</span>.println(<span class="hljs-keyword">no</span>.step);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">class</span> Node&#123;<br><span class="hljs-type">int</span> step;<br><span class="hljs-type">int</span> x;<br><span class="hljs-type">int</span> y;<br>Node()&#123;<br>&#125;<br>Node(<span class="hljs-type">int</span> x,<span class="hljs-type">int</span> y,<span class="hljs-type">int</span> step)&#123;<br>this.x=x;<br>this.y=y;<br>this.step=step;<br>&#125;<br>&#125;<br><br><br></code></pre></td></tr></table></figure><h3 id="九、DP动态规划"><a href="#九、DP动态规划" class="headerlink" title="九、DP动态规划"></a>九、DP动态规划</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/05/25/hello-world/"/>
    <url>/2024/05/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
